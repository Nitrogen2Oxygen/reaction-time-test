{"version":3,"sources":["components/Title.js","components/Results.js","components/ReactionTest.js","components/Footer.js","components/App.js","serviceWorkerRegistration.js","index.js"],"names":["Title","Box","textAlign","Typography","variant","color","Results","props","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","stats","map","time","index","component","scope","Average","length","total","forEach","e","average","ReactionTest","useState","results","setResults","testing","setTesting","triggered","setTriggered","testTimeout","setTestTimeout","actionButton","setActionButton","useEffect","document","getElementById","style","innerText","getTimeout","Math","floor","random","setTimeout","Date","getTime","diff","display","Grid","container","direction","justify","item","xs","Divider","Button","id","onClick","clearTimeout","disabled","backgroundColor","width","height","orientation","flexItem","useStyles","makeStyles","theme","footer","position","left","bottom","palette","grey","padding","Footer","classes","className","Link","href","target","rel","GitHub","fontSize","App","Container","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","createMuiTheme","type","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"iSAEe,SAASA,IACpB,OACI,eAACC,EAAA,EAAD,CAAKC,UAAU,SAAf,UACQ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAA/B,gCAGA,cAACF,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,UAAtC,0cAOA,cAACF,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,UAAtC,wP,oECbD,SAASC,EAAQC,GAC5B,OACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,KAAK,SAASC,aAAW,cAAhC,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBAGR,eAACC,EAAA,EAAD,WACKT,EAAMU,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACb,eAACP,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWO,UAAU,KAAKC,MAAM,MAAhC,SACKF,EAAQ,IAEb,cAACN,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACKI,EAAO,SALD,QAAUC,MAS7B,cAACG,EAAD,CAASN,MAAOV,EAAMU,gBAO1C,SAASM,EAAQhB,GACb,IAAIU,EAAQV,EAAMU,MAClB,GAAIA,EAAMO,OAAS,EACf,OAAO,KAEP,IAAIC,EAAQ,EACfR,EAAMS,SAAQ,SAAAC,GACM,iBAALA,IACRF,GAASE,MAGhB,IAAIC,EAAUH,EAAMR,EAAMO,OAC1B,OACG,eAACX,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWO,UAAU,KAAKC,MAAM,MAAhC,qBACA,cAACR,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0Ba,EAAU,U,0BCxCjC,SAASC,IAAgB,IAAD,EACLC,mBAAS,IADJ,mBAC5BC,EAD4B,KACnBC,EADmB,OAELF,oBAAS,GAFJ,mBAE5BG,EAF4B,KAEnBC,EAFmB,OAGDJ,mBAAS,MAHR,mBAG5BK,EAH4B,KAGjBC,EAHiB,OAIGN,mBAAS,MAJZ,mBAI5BO,EAJ4B,KAIfC,EAJe,OAKKR,mBAAS,QALd,mBAK5BS,EAL4B,KAKdC,EALc,KAsDnC,OA9CAC,qBAAU,WACN,GAAIR,EAAS,CAETS,SAASC,eAAe,aAAaC,MAAM,oBAAsB,MACjEF,SAASC,eAAe,YAAYE,UAAY,aAChD,IAAIC,EAAaC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EACjDX,EACIY,YAAW,WACPR,SAASC,eAAe,aAAaC,MAAM,oBAAsB,QACjER,GAAa,IAAIe,MAAOC,WACxBd,EAAe,QACH,IAAbQ,QAEJ,CACH,IAAKX,EAAW,OAEhB,IAAIkB,GAAQ,IAAIF,MAAOC,UAAajB,EACpCC,EAAa,MACbM,SAASC,eAAe,aAAaC,MAAM,oBAAsB,SACjEZ,EAAW,GAAD,mBAAKD,GAAL,CAAcsB,KACpBtB,EAAQP,QAAU,GAClBgB,EAAgB,eAGzB,CAACP,IAEJQ,qBAAU,WAIN,OAHAC,SAASC,eAAe,YAAYC,MAAMU,QAAU,OACpDZ,SAASC,eAAe,iBAAiBC,MAAMU,QAAU,OACzDZ,SAASC,eAAe,gBAAgBC,MAAMU,QAAU,OACjDf,GACH,IAAK,OACDG,SAASC,eAAe,YAAYC,MAAMU,QAAU,cACpD,MACJ,IAAK,QACDZ,SAASC,eAAe,iBAAiBC,MAAMU,QAAU,cACzD,MACJ,IAAK,WACDZ,SAASC,eAAe,gBAAgBC,MAAMU,QAAU,cACxD,MACJ,QACIZ,SAASC,eAAe,YAAYC,MAAMU,QAAU,iBAG7D,CAACf,IAGA,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAAxC,UACI,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,UACI,cAACzD,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACI,+BACI,wDACA,gEACA,mFACA,2EAGR,cAACyD,EAAA,EAAD,CAASzD,QAAQ,WACjB,uBACA,eAACmD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAAxC,UACI,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,UACA,cAACE,EAAA,EAAD,CAAQC,GAAG,WAAW3D,QAAQ,YAAYC,MAAM,UAAUK,KAAK,QAAQsD,QAAS,WACxEjC,EAAQP,QAAU,IACjBS,GAGGI,GAEAC,EAAe2B,aAAa5B,IAC5BK,SAASC,eAAe,aAAaC,MAAM,oBAAsB,SACjEJ,EAAgB,SAChBE,SAASC,eAAe,YAAYE,UAAY,QAChDK,WAAWV,EAAiB,IAAM,UAGlCE,SAASC,eAAe,YAAYE,UAAY,QAChDH,SAASC,eAAe,aAAaC,MAAM,oBAAsB,UAErEV,GAAW,IAdXA,GAAW,KAHnB,mBAoBI,cAAC4B,EAAA,EAAD,CAAQlB,MAAO,CAACU,QAAS,QAASS,GAAG,gBAAgB3D,QAAQ,YAAYC,MAAM,YAAYK,KAAK,QAAQwD,UAAQ,EAAhH,wBAGA,cAACJ,EAAA,EAAD,CAAQlB,MAAO,CAACU,QAAS,QAASS,GAAG,eAAe3D,QAAQ,YAAYC,MAAM,YAAYK,KAAK,QAAQwD,UAAQ,EAA/G,uBAGA,uBAAM,uBACN,cAACJ,EAAA,EAAD,CAAQC,GAAG,YAAY3D,QAAQ,YAAYC,MAAM,YAAYK,KAAK,SAASsD,QAAS,WAEhFtB,SAASC,eAAe,aAAaC,MAAM,oBAAsB,SACjEJ,EAAgB,QAChBE,SAASC,eAAe,YAAYE,UAAY,QAChDX,EAAW,MACXE,EAAa,MACbE,EAA8B,MAAfD,EAAsB,KAAO4B,aAAa5B,IACzDL,EAAW,KARf,sBAWJ,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,SACA,cAAC3D,EAAA,EAAD,CAAK8D,GAAG,YAAYnB,MAAO,CAACuB,gBAAiB,UAAWC,MAAM,QAAQC,OAAO,kBAIrF,cAACR,EAAA,EAAD,CAASS,YAAY,WAAWlE,QAAQ,SAASmE,UAAQ,IACzD,eAAChB,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,UACI,cAACzD,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBAGD,cAACE,EAAD,CAASW,MAAOc,U,4BCzHzByC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,SAAU,QACVC,KAAM,EACNC,OAAQ,EACRV,MAAO,OACPD,gBAAiBO,EAAMK,QAAQC,KAAK,KACpC3E,MAAO,QACPH,UAAW,SACX+E,QAAS,WAIF,SAASC,IACpB,IAAMC,EAAUX,IAChB,OACE,qBAAKY,UAAWD,EAAQR,OAAxB,SACQ,eAACxE,EAAA,EAAD,CAAYC,QAAQ,QAApB,sCAEI,uBACA,cAACiF,EAAA,EAAD,CAAMhF,MAAM,UAAUiF,KAAK,wDAAwDC,OAAO,SAASC,IAAI,aAAvG,SACE,cAACC,EAAA,EAAD,CAAQC,SAAS,iBCnBtB,SAASC,IACtB,OACI,eAACC,EAAA,EAAD,WACE,cAAC5F,EAAD,IACA,uBACA,cAAC6D,EAAA,EAAD,IACA,uBACA,cAAC,EAAD,IACA,cAACqB,EAAD,OCFR,IAAMW,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,M,4BCvF3D5C,EAAQ6C,YAAe,CAC3BxC,QAAS,CACPyC,KAAM,UAIVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAelD,MAAOA,EAAtB,UACE,cAACmD,EAAA,EAAD,IACA,cAAC,EAAD,SAGJnF,SAASC,eAAe,SDAnB,SAAkB0D,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,sBAAwBhC,OAAOC,SAASV,MACpD0C,SAAWjC,OAAOC,SAASgC,OAIvC,OAGFjC,OAAOkC,iBAAiB,QAAQ,WAC9B,IAAM7B,EAAK,UAAM2B,sBAAN,sBAEPlC,IAgEV,SAAiCO,EAAOC,GAEtC6B,MAAM9B,EAAO,CACX+B,QAAS,CAAE,iBAAkB,YAE5B1B,MAAK,SAAC2B,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ClC,UAAUC,cAAckC,MAAMhC,MAAK,SAACC,GAClCA,EAAagC,aAAajC,MAAK,WAC7BV,OAAOC,SAAS2C,eAKpBxC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFV0B,CAAwBxC,EAAOC,GAI/BC,UAAUC,cAAckC,MAAMhC,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OCzB/BwC,K","file":"static/js/main.3330f162.chunk.js","sourcesContent":["import { Box, Typography } from \"@material-ui/core\";\n\nexport default function Title() {\n    return (\n        <Box textAlign=\"center\">\n                <Typography variant=\"h3\" color=\"inherit\">\n                    Reaction Time Test\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"inherit\">\n                    This is a reaction time test (built with React haha).\n                    You will click a button and wait for it to change colors, then click it again as soon as possible.\n                    The test is measured in milliseconds (1ms = 1/1000 seconds).\n                    You will complete 5 trials of this, each being recorded on the right, with the average performance being on the bottom.\n                    This test is not 100% accurate and is limited by computer and browser performance, as well as basic input lag.\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                    IMPORTANT: Certain privacy related browser settings on Firefox will make this test less accurate. \n                    For the most accurate times, please disable the \"privacy.reduceTimerPrecision\" or change the value of \"privacy.resistFingerprinting.\" \n                </Typography>\n        </Box>\n    )\n}","import { TableContainer, Table, TableBody, TableHead, TableRow, TableCell } from \"@material-ui/core\";\n\nexport default function Results(props) {\n    return (\n        <TableContainer>\n            <Table size=\"medium\" aria-label=\"Trial table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Trial</TableCell>\n                        <TableCell align=\"right\">Time</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.stats.map((time, index) => (\n                        <TableRow key={\"trial\" + index}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {index + 1}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {time + \"ms\"}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                    <Average stats={props.stats} />\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nfunction Average(props) {\n    var stats = props.stats\n    if (stats.length < 1) {\n        return null;\n    } else {\n        var total = 0;\n     stats.forEach(e => {\n         if (typeof e == \"number\") {\n            total += e;\n         }\n     });\n     var average = total/stats.length;\n     return (\n        <TableRow>\n            <TableCell component=\"th\" scope=\"row\">Average</TableCell>\n            <TableCell align=\"right\">{average + \"ms\"}</TableCell>\n        </TableRow>\n     )\n    }\n}","import Results from \"./Results\";\nimport \"./ReactionTest.css\"\nimport { useState, useEffect } from \"react\";\nimport { Box, Button, Divider, Grid, Typography } from \"@material-ui/core\";\n\nexport default function ReactionTest() {\n    const [results, setResults] = useState([]);\n    const [testing, setTesting] = useState(false);\n    const [triggered, setTriggered] = useState(null);\n    const [testTimeout, setTestTimeout] = useState(null);\n    const [actionButton, setActionButton] = useState(\"main\")\n\n    \n    useEffect(() => {\n        if (testing) {\n            // Begin test\n            document.getElementById(\"color-box\").style[\"background-color\"] = \"red\";\n            document.getElementById(\"main-btn\").innerText = \"Click Here\";\n            var getTimeout = Math.floor(Math.random() * 7) + 3\n            setTestTimeout(\n                setTimeout(function() {\n                    document.getElementById(\"color-box\").style[\"background-color\"] = \"green\";\n                    setTriggered(new Date().getTime());\n                    setTestTimeout(null);\n                }, getTimeout * 1000)\n            )\n        } else {\n            if (!triggered) return;\n            // End test\n            var diff = (new Date().getTime()) - triggered;\n            setTriggered(null);\n            document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\n            setResults([...results, diff])\n            if (results.length >= 4) {\n                setActionButton(\"finished\")\n            }\n        }\n    }, [testing]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    useEffect(() => {\n        document.getElementById(\"main-btn\").style.display = \"none\";\n        document.getElementById(\"too-early-btn\").style.display = \"none\";\n        document.getElementById(\"finished-btn\").style.display = \"none\";\n        switch(actionButton) {\n            case \"main\":\n                document.getElementById(\"main-btn\").style.display = \"inline-flex\";\n                break;\n            case \"early\":\n                document.getElementById(\"too-early-btn\").style.display = \"inline-flex\";\n                break;\n            case \"finished\":\n                document.getElementById(\"finished-btn\").style.display = \"inline-flex\";\n                break;\n            default:\n                document.getElementById(\"main-btn\").style.display = \"inline-flex\";\n                break;\n        }\n    }, [actionButton])\n\n    return (\n        <Grid container direction=\"row\" justify=\"center\">\n            <Grid item xs>\n                <Typography variant=\"h4\">\n                    Reaction Test\n                </Typography>\n                <Typography variant=\"body1\">\n                    <ol>\n                        <li>Click the start button</li>\n                        <li>Wait until the box turns green</li>\n                        <li>Click the \"Click Here\" button as fast as possible</li>\n                        <li>Do this 5 times to complete the test</li>\n                    </ol>\n                </Typography>\n                <Divider variant=\"middle\" />\n                <br />\n                <Grid container direction=\"row\" justify=\"center\">\n                    <Grid item xs>\n                    <Button id=\"main-btn\" variant=\"contained\" color=\"primary\" size=\"large\" onClick={function() { \n                        if (results.length >= 5) return;\n                        if (!testing) {\n                            setTesting(true); \n                        } else {\n                            if (testTimeout) {\n                                // Too early\n                                setTestTimeout(clearTimeout(testTimeout));\n                                document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\n                                setActionButton(\"early\");\n                                document.getElementById(\"main-btn\").innerText = \"Start\";\n                                setTimeout(setActionButton, 2000, \"main\");\n                            } else {\n                                // Hit\n                                document.getElementById(\"main-btn\").innerText = \"Start\";\n                                document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\n                            }\n                            setTesting(false);\n                        }\n                        }}>Start</Button>\n                        <Button style={{display: \"none\"}} id=\"too-early-btn\" variant=\"contained\" color=\"secondary\" size=\"large\" disabled>\n                            Too Early!\n                        </Button>\n                        <Button style={{display: \"none\"}} id=\"finished-btn\" variant=\"contained\" color=\"secondary\" size=\"large\" disabled>\n                            Finished!\n                        </Button>\n                        <br /><br />\n                        <Button id=\"reset-btn\" variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={function() {\n                            // Reset game\n                            document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\n                            setActionButton(\"main\")\n                            document.getElementById(\"main-btn\").innerText = \"Start\";\n                            setTesting(null);\n                            setTriggered(null)\n                            setTestTimeout(testTimeout == null ? null : clearTimeout(testTimeout))\n                            setResults([]);\n                        }}>Reset</Button>\n                    </Grid>\n                    <Grid item xs>\n                    <Box id=\"color-box\" style={{backgroundColor: \"yellow\"}} width=\"250px\" height=\"250px\" />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\n            <Grid item xs>\n                <Typography variant=\"h4\">\n                    Results\n                </Typography>\n               <Results stats={results} /> \n            </Grid>\n        </Grid>\n    )\n}","import { Link, Typography } from \"@material-ui/core\";\nimport { GitHub } from \"@material-ui/icons\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        position: \"fixed\",\n        left: 0,\n        bottom: 0,\n        width: \"100%\",\n        backgroundColor: theme.palette.grey[800],\n        color: \"white\",\n        textAlign: \"center\",\n        padding: \".5%\"\n    }\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    return (\n      <div className={classes.footer}>\n              <Typography variant=\"body1\">\n                  &copy; 2021 Nitrogen2Oxygen\n                  <br />\n                  <Link color=\"inherit\" href=\"https://github.com/Nitrogen2Oxygen/reaction-time-test\" target=\"_blank\" rel=\"noreferrer\">\n                    <GitHub fontSize=\"large\" />\n                  </Link>\n              </Typography>\n      </div>\n    )\n}","import { Divider, Container } from '@material-ui/core';\nimport './App.css';\nimport Title from './Title';\nimport ReactionTest from \"./ReactionTest\";\nimport Footer from \"./Footer\"\n\nexport default function App() {\n  return (\n      <Container>\n        <Title />\n        <br />\n        <Divider />\n        <br />\n        <ReactionTest />\n        <Footer />\n      </Container>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}
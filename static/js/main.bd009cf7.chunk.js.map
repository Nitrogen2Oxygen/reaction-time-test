{"version":3,"sources":["components/Title.js","components/Results.js","components/ReactionTest.js","components/Footer.js","components/App.js","index.js"],"names":["Title","Box","textAlign","Typography","variant","color","Results","props","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","stats","map","time","index","component","scope","Average","length","total","forEach","e","average","ReactionTest","useState","results","setResults","testing","setTesting","triggered","setTriggered","testTimeout","setTestTimeout","useEffect","document","getElementById","style","innerText","getTimeout","Math","floor","random","setTimeout","Date","getTime","diff","display","Grid","container","direction","justify","item","xs","Divider","Button","id","onClick","clearTimeout","disabled","backgroundColor","width","height","orientation","flexItem","useStyles","makeStyles","theme","footer","position","left","bottom","palette","grey","padding","Footer","classes","className","Link","href","target","rel","GitHub","fontSize","App","Container","createMuiTheme","type","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.bd009cf7.chunk.js","sourcesContent":["import { Box, Typography } from \"@material-ui/core\";\n\nexport default function Title() {\n    return (\n        <Box textAlign=\"center\">\n                <Typography variant=\"h3\" color=\"inherit\">\n                    Reaction Time Test\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"inherit\">\n                    This is a reaction time test (built with React haha).\n                    You will click a button and wait for it to change colors, then click it again as soon as possible.\n                    The test is measured in milliseconds (1ms = 1/1000 seconds).\n                    You will complete 5 trials of this, each being recorded on the right, with the average performance being on the bottom.\n                    This test is not 100% accurate and is limited by computer and browser performance, as well as basic input lag.\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                    IMPORTANT: Certain privacy related browser settings on Firefox will make this test less accurate. \n                    For the most accurate times, please disable the \"privacy.reduceTimerPrecision\" or change the value of \"privacy.resistFingerprinting.\" \n                </Typography>\n        </Box>\n    )\n}","import { TableContainer, Table, TableBody, TableHead, TableRow, TableCell } from \"@material-ui/core\";\n\nexport default function Results(props) {\n    return (\n        <TableContainer>\n            <Table size=\"medium\" aria-label=\"Trial table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Trial</TableCell>\n                        <TableCell align=\"right\">Time</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.stats.map((time, index) => (\n                        <TableRow key={\"trial\" + index}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {index + 1}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {time + \"ms\"}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                    <Average stats={props.stats} />\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nfunction Average(props) {\n    var stats = props.stats\n    if (stats.length < 1) {\n        return null;\n    } else {\n        var total = 0;\n     stats.forEach(e => {\n         if (typeof e == \"number\") {\n            total += e;\n         }\n     });\n     var average = total/stats.length;\n     return (\n        <TableRow>\n            <TableCell component=\"th\" scope=\"row\">Average</TableCell>\n            <TableCell align=\"right\">{average + \"ms\"}</TableCell>\n        </TableRow>\n     )\n    }\n}","import Results from \"./Results\";\nimport \"./ReactionTest.css\"\nimport { useState, useEffect } from \"react\";\nimport { Box, Button, Divider, Grid, Typography } from \"@material-ui/core\";\n\nexport default function ReactionTest() {\n    const [results, setResults] = useState([]);\n    const [testing, setTesting] = useState(false);\n    const [triggered, setTriggered] = useState(null);\n    const [testTimeout, setTestTimeout] = useState(null);\n\n    \n    useEffect(() => {\n        if (testing) {\n            // Begin test\n            document.getElementById(\"color-box\").style[\"background-color\"] = \"red\";\n            document.getElementById(\"main-btn\").innerText = \"Click here\";\n            var getTimeout = Math.floor(Math.random() * 7) + 3\n            setTestTimeout(\n                setTimeout(function() {\n                    document.getElementById(\"color-box\").style[\"background-color\"] = \"green\";\n                    setTriggered(new Date().getTime())\n                }, getTimeout * 1000)\n            )\n        } else {\n            if (!triggered) return;\n            // End test\n            var diff = (new Date().getTime()) - triggered;\n            setTriggered(null);\n            document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\n            setResults([...results, diff])\n            if (results.length >= 4) {\n                document.getElementById(\"main-btn\").style.display = \"none\"\n                document.getElementById(\"finished-btn\").style.display = \"inline-flex\"\n            }\n        }\n    }, [testing]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <Grid container direction=\"row\" justify=\"center\">\n            <Grid item xs>\n                <Typography variant=\"h4\">\n                    Reaction Test\n                </Typography>\n                <Typography variant=\"body1\">\n                    <ol>\n                        <li>Click the start button</li>\n                        <li>Wait until the box turns green</li>\n                        <li>Click the \"Click Here\" button as fast as possible</li>\n                        <li>Do this 5 times to complete the test</li>\n                    </ol>\n                </Typography>\n                <Divider variant=\"middle\" />\n                <br />\n                <Grid container direction=\"row\" justify=\"center\">\n                    <Grid item xs>\n                    <Button id=\"main-btn\" variant=\"contained\" color=\"primary\" size=\"large\" onClick={function() { \n                        if (results.length >= 5) return;\n                        if (!testing) {\n                            setTesting(true); \n                        } else {\n                            if (testTimeout !== null) {\n                                setTestTimeout(clearTimeout(testTimeout));\n                                document.getElementById(\"main-btn\").innerText = \"Start\";\n                                document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\n                            }\n                            setTesting(false);\n                        }\n                        }}>Start</Button>\n                        <Button style={{display: \"none\"}} id=\"finished-btn\" variant=\"contained\" color=\"secondary\" size=\"large\" disabled>\n                            Finished!\n                        </Button>\n                        <br /><br />\n                        <Button id=\"reset-btn\" variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={function() {\n                            document.getElementById(\"main-btn\").innerText = \"Start\";\n                            document.getElementById(\"main-btn\").style.display = \"inline-flex\";\n                            document.getElementById(\"finished-btn\").style.display = \"none\";\n                            document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\n                            setTesting(null);\n                            setTriggered(null)\n                            setTestTimeout(testTimeout == null ? null : clearTimeout(testTimeout))\n                            setResults([]);\n                        }}>Reset</Button>\n                    </Grid>\n                    <Grid item xs>\n                    <Box id=\"color-box\" style={{backgroundColor: \"yellow\"}} width=\"250px\" height=\"250px\" />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\n            <Grid item xs>\n                <Typography variant=\"h4\">\n                    Results\n                </Typography>\n               <Results stats={results} /> \n            </Grid>\n        </Grid>\n    )\n}","import { Link, Typography } from \"@material-ui/core\";\nimport { GitHub } from \"@material-ui/icons\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        position: \"fixed\",\n        left: 0,\n        bottom: 0,\n        width: \"100%\",\n        backgroundColor: theme.palette.grey[800],\n        color: \"white\",\n        textAlign: \"center\",\n        padding: \".5%\"\n    }\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    return (\n      <div className={classes.footer}>\n              <Typography variant=\"body1\">\n                  &copy; 2021 Nitrogen2Oxygen\n                  <br />\n                  <Link color=\"inherit\" href=\"https://github.com/Nitrogen2Oxygen/reaction-time-test\" target=\"_blank\" rel=\"noreferrer\">\n                    <GitHub fontSize=\"large\" />\n                  </Link>\n              </Typography>\n      </div>\n    )\n}","import { Divider, Container } from '@material-ui/core';\nimport './App.css';\nimport Title from './Title';\nimport ReactionTest from \"./ReactionTest\";\nimport Footer from \"./Footer\"\n\nexport default function App() {\n  return (\n      <Container>\n        <Title />\n        <br />\n        <Divider />\n        <br />\n        <ReactionTest />\n        <Footer />\n      </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
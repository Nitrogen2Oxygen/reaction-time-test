{"version":3,"sources":["components/Title.js","components/Results.js","components/Test.js","components/App.js","index.js"],"names":["Title","Box","textAlign","style","Results","props","Grid","container","direction","justify","spacing","item","xs","TextField","helperText","value","stats","average","arr","total","forEach","e","length","Test","useState","results","setResults","testing","setTesting","triggered","setTriggered","testTimeout","setTestTimeout","useEffect","console","log","document","getElementById","innerText","getTimeout","Math","floor","random","setTimeout","Date","getTime","diff","display","Divider","Button","id","variant","color","size","onClick","clearTimeout","disabled","backgroundColor","width","height","App","Container","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da50d4ac.chunk.js","sourcesContent":["import { Box } from \"@material-ui/core\";\r\n\r\nexport default function Title() {\r\n    return (\r\n        <Box>\r\n            <Box textAlign=\"center\">\r\n                <h1>Reaction Time Test</h1>\r\n                <span>By Nitrogen2Oxygen</span>\r\n            </Box>\r\n            <Box textAlign=\"center\">\r\n                <h2 style={{textAlign: \"center\"}}>About</h2>\r\n                    <p>\r\n                    This is a reaction time test (built with React {\">\"}:3).\r\n                    You will click a button and wait for it to change colors, then click it again.\r\n                    This test is not 100% accurate and is limited by computer and browser performance, as well as basic input lag.\r\n                    <br></br><br></br>\r\n                    <b>NOTE:</b> Certain privacy related browser settings on Firefox will make this test less accurate. \r\n                    For the most accurate times, please disable the \"privacy.reduceTimerPrecision\" or change the value of \"privacy.resistFingerprinting\" \r\n                </p>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import { TextField, Grid } from \"@material-ui/core\";\r\n\r\nexport default function Results(props) {\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" spacing={3}>\r\n            <Grid item xs>\r\n                <h2>Trials</h2>\r\n            </Grid>\r\n            <Grid item xs>\r\n                <TextField helperText=\"Trial 1\" value={props.stats[0] ? props.stats[0] + \"ms\" : \"\"} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <TextField helperText=\"Trial 2\" value={props.stats[1] ? props.stats[1] + \"ms\" : \"\"} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <TextField helperText=\"Trial 3\" value={props.stats[2] ? props.stats[2] + \"ms\" : \"\"} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <TextField helperText=\"Trial 4\" value={props.stats[3] ? props.stats[3] + \"ms\" : \"\"} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <TextField helperText=\"Trial 5\" value={props.stats[4] ? props.stats[4] + \"ms\" : \"\"} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <TextField helperText=\"Average\" value={props.stats[0] ? average(props.stats) + \"ms\" : \"\"} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nfunction average(arr) {\r\n     var total = 0;\r\n     arr.forEach(e => {\r\n         if (typeof e == \"number\") {\r\n            total += e;\r\n         }\r\n     });\r\n     return total/arr.length;\r\n}","import Results from \"./Results\";\r\nimport \"./Test.css\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { Box, Button, Divider, Grid } from \"@material-ui/core\";\r\n\r\nexport default function Test() {\r\n    const [results, setResults] = useState([]);\r\n    const [testing, setTesting] = useState(false);\r\n    const [triggered, setTriggered] = useState(null);\r\n    const [testTimeout, setTestTimeout] = useState(null);\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(testing)\r\n        if (testing) {\r\n            // Begin test\r\n            document.getElementById(\"color-box\").style[\"background-color\"] = \"red\";\r\n            document.getElementById(\"main-btn\").innerText = \"Click here\";\r\n            var getTimeout = Math.floor(Math.random() * 7) + 3\r\n            setTestTimeout(\r\n                setTimeout(function() {\r\n                    document.getElementById(\"color-box\").style[\"background-color\"] = \"green\";\r\n                    setTriggered(new Date().getTime())\r\n                }, getTimeout * 1000)\r\n            )\r\n        } else {\r\n            if (!triggered) return;\r\n            // End test\r\n            var diff = (new Date().getTime()) - triggered;\r\n            setTriggered(null);\r\n            document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\r\n            setResults([...results, diff])\r\n            if (results.length >= 4) {\r\n                document.getElementById(\"main-btn\").style.display = \"none\"\r\n                document.getElementById(\"finished-btn\").style.display = \"inline-flex\"\r\n            }\r\n        }\r\n    }, [testing]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        console.log(results)\r\n    }, [results])\r\n\r\n    useEffect(() => {\r\n        console.log(triggered)\r\n    }, [triggered])\r\n\r\n    useEffect(() => {\r\n        console.log(testTimeout)\r\n    }, [testTimeout])\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\">\r\n            <Grid item xs>\r\n                <h2>Reaction Test</h2>\r\n                <ol>\r\n                        <li>Click the start button</li>\r\n                        <li>Wait until the box turns green</li>\r\n                        <li>Click the \"Click Here\" button as fast as possible</li>\r\n                        <li>Do this 5 times to complete the test</li>\r\n                    </ol>\r\n                <Divider />\r\n                <br />\r\n                <Grid container direction=\"row\" justify=\"center\">\r\n                    <Grid item xs>\r\n                    <Button id=\"main-btn\" variant=\"contained\" color=\"primary\" size=\"large\" onClick={function() { \r\n                        if (results.length >= 5) return;\r\n                        if (!testing) {\r\n                            setTesting(true); \r\n                        } else {\r\n                            if (testTimeout !== null) {\r\n                                setTestTimeout(clearTimeout(testTimeout));\r\n                                document.getElementById(\"main-btn\").innerText = \"Start\";\r\n                                document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\r\n                            }\r\n                            setTesting(false);\r\n                        }\r\n                        }}>Start</Button>\r\n                        <Button style={{display: \"none\"}} id=\"finished-btn\" variant=\"contained\" color=\"secondary\" size=\"large\" disabled>\r\n                            Finished!\r\n                        </Button>\r\n                        <br /><br />\r\n                        <Button id=\"reset-btn\" variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={function() {\r\n                            document.getElementById(\"main-btn\").innerText = \"Start\";\r\n                            document.getElementById(\"color-box\").style[\"background-color\"] = \"yellow\";\r\n                            setTesting(null);\r\n                            setTriggered(null)\r\n                            setTestTimeout(testTimeout == null ? null : clearTimeout(testTimeout))\r\n                            setResults([]);\r\n                        }}>Reset</Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                    <Box id=\"color-box\" style={{backgroundColor: \"yellow\"}} width=\"250px\" height=\"250px\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs>\r\n               <Results stats={results} /> \r\n            </Grid>\r\n        </Grid>\r\n        \r\n    )\r\n}","import { Container } from '@material-ui/core';\nimport './App.css';\nimport Title from './Title';\nimport Test from \"./Test\";\n\nfunction App() {\n  return (\n    <Container>\n      <Title />\n      <Test />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}